jobs:
- job: MetricsRelease
  variables:
    skipComponentGovernanceDetection: true
  displayName: 'Metrics and Release'
  dependsOn: ${{ parameters.depends_on }}

  ${{ insert }}: ${{ parameters.env }}

  steps:
    - checkout: self
      clean: true
      condition: eq(variables['Build.Reason'], 'PullRequest')

    - script: ./cimetrics_env.sh python -m cimetrics.plot
      env:
        METRICS_MONGO_CONNECTION: $(METRICS_MONGO_CONNECTION)
      workingDirectory: tests
      displayName: 'Plot cimetrics'
      condition: eq(variables['Build.Reason'], 'PullRequest')

    - script: ./cimetrics_env.sh python -m cimetrics.github_pr
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)
      workingDirectory: tests
      displayName: 'Post cimetrics graphs as PR comment'
      condition: eq(variables['Build.Reason'], 'PullRequest')

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: _cimetrics
        artifactName: cimetrics
      displayName: 'Publish cimetrics graphs as build artifact'
      condition: eq(variables['Build.Reason'], 'PullRequest')

    - ${{ if eq(parameters.perf_or_release, 'release') }}:
      - task: DownloadPipelineArtifact@2
        inputs:
          source: current
          patterns: '**/ccf*.tar.gz'
          path: $(Build.ArtifactStagingDirectory)

      - task: GitHubRelease@0
        inputs:
          gitHubConnection: ccf_release
          repositoryName: '$(Build.Repository.Name)'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'auto'
          assets: $(Build.ArtifactStagingDirectory)/**/ccf*.tar.gz
          assetUploadMode: 'delete'
          isDraft: true
          isPreRelease: true
          addChangeLog: false
        displayName: 'GitHub release (create)'